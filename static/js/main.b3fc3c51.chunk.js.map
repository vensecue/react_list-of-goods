{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleReverse","setState","handleByLength","LENGTH","handleAlphabetically","ALPHABET","handleReset","getReorderedGoods","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","this","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,cAAgB,WACd,EAAKC,UAAS,SAAAL,GACZ,MAAO,CACLC,YAAaD,EAAMC,gBAT3B,EAcEK,eAAiB,WACf,EAAKD,SAAS,CAAEH,SAAUL,EAASU,UAfvC,EAkBEC,qBAAuB,WACrB,EAAKH,SAAS,CAAEH,SAAUL,EAASY,YAnBvC,EAsBEC,YAAc,WACZ,EAAKL,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KAvBzD,EA0BEU,kBAAoB,SAClBC,EADkB,GAGd,IADFV,EACC,EADDA,SAAUD,EACT,EADSA,WAENY,EAAY,YAAOD,GAczB,OAZIV,IAAaL,EAASY,UACxBI,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG1Cd,IAAaL,EAASU,QACxBM,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAGvCjB,GACFY,EAAaM,UAGRN,GA5CX,4CA+CE,WACE,MAAiCO,KAAKpB,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEpB,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,CAAC,SAAU,WAC/B,CAAE,WAAYrB,IAAaL,EAASY,WACtCe,QAASJ,KAAKZ,qBAJhB,iCASA,wBACEc,KAAK,SACLD,UAAWE,IAAW,CAAC,SAAU,cAC/B,CAAE,WAAYrB,IAAaL,EAASU,SACtCiB,QAASJ,KAAKd,eAJhB,4BASA,wBACEgB,KAAK,SACLD,UAAWE,IAAW,CAAC,SAAU,cAC/B,CAAE,YAAatB,IACjBuB,QAASJ,KAAKhB,cAJhB,sBASEgB,KAAKpB,MAAMC,YAAcmB,KAAKpB,MAAME,WAAaL,EAASM,OAE1D,wBACEmB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKV,YAHhB,sBAUJ,6BACGU,KAAKT,kBAAkBb,EAAiB,CAAEI,WAAUD,eAClDwB,KAAI,SAACC,GACJ,OACE,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eAhGxC,GAAyBC,IAAMC,WCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b3fc3c51.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goodsFromServer];\n\n  visibleGoods.sort((a, b) => {\n    if (sortType === SortType.ALPHABET) {\n      return a.localeCompare(b);\n    }\n\n    if (sortType === SortType.LENGTH) {\n      return a.length - b.length;\n    }\n\n    return 0;\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleReverse = () => {\n    this.setState(state => {\n      return {\n        isReversed: !state.isReversed,\n      };\n    });\n  };\n\n  handleByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  handleReset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  getReorderedGoods = (\n    goods: string[],\n    { sortType, isReversed }: ReorderOptions,\n  ) => {\n    const visibleGoods = [...goods];\n\n    if (sortType === SortType.ALPHABET) {\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n    }\n\n    if (sortType === SortType.LENGTH) {\n      visibleGoods.sort((a, b) => a.length - b.length);\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(['button', 'is-info'],\n              { 'is-light': sortType !== SortType.ALPHABET })}\n            onClick={this.handleAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(['button', 'is-success'],\n              { 'is-light': sortType !== SortType.LENGTH })}\n            onClick={this.handleByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(['button', 'is-warning'],\n              { 'is-light': !isReversed })}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {(this.state.isReversed || this.state.sortType !== SortType.NONE)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {this.getReorderedGoods(goodsFromServer, { sortType, isReversed })\n            .map((good) => {\n              return (\n                <li data-cy=\"Good\" key={good}>{good}</li>\n              );\n            })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}